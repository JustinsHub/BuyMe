{"ast":null,"code":"var _jsxFileName = \"/Users/anyone/Desktop/Coding/SB Bootcamp/Capstone-Project-2/Pickout/frontend/src/components/products/paymentComponents/CheckoutForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport Payment from './paymentApi';\nimport '../../styles/StripePayments.css'; //CSS prop add on for CardElement\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"16px\",\n      \"::placeholder\": {\n        color: \"#aaaaaa\"\n      }\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\"\n    }\n  }\n};\n\nconst CheckoutForm = ({\n  meal,\n  pair\n}) => {\n  _s();\n\n  const [ifPairMeal] = useState(localStorage.getItem('pair-meal'));\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    }); //if wine add wine method (how to get wine)\n\n    if (!error) {\n      const {\n        id\n      } = paymentMethod;\n\n      if (!ifPairMeal) {\n        //document this\n        const signatureMealPayment = await Payment.signatureStripePayment(id);\n        meal(); //our POST method for purchases when purchasing signature-meal passed down by a prop\n\n        setSuccess(true);\n        return signatureMealPayment;\n      } else {\n        const pairMealPayment = await Payment.signatureStripePayment(id);\n        pair();\n        setSuccess(true);\n        return pairMealPayment;\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"FormGroup col-12 spectrum-background\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Stripe-Payment-Button btn btn-default\",\n          style: {\n            color: \"white\"\n          },\n          children: \"Place your order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Successfully purchased your meal!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"hC5IWoEXiRVFwIOFPxi9fP1AnOg=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/Users/anyone/Desktop/Coding/SB Bootcamp/Capstone-Project-2/Pickout/frontend/src/components/products/paymentComponents/CheckoutForm.js"],"names":["React","useState","CardElement","useElements","useStripe","Payment","CARD_OPTIONS","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CheckoutForm","meal","pair","ifPairMeal","localStorage","getItem","success","setSuccess","stripe","elements","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","signatureMealPayment","signatureStripePayment","pairMealPayment","console","log","message"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {CardElement, useElements, useStripe} from '@stripe/react-stripe-js';\nimport Payment from './paymentApi'\nimport '../../styles/StripePayments.css'\n\n//CSS prop add on for CardElement\nconst CARD_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"16px\",\n      \"::placeholder\": {\n        color: \"#aaaaaa\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nconst CheckoutForm = ({meal, pair}) => {\n  const [ifPairMeal] = useState(localStorage.getItem('pair-meal'))\n  const [success, setSuccess] = useState(false)\n  const stripe = useStripe();\n  const elements = useElements();\n  \n  const handleSubmit = async (e) => {\n      e.preventDefault();\n      const {error, paymentMethod} = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: elements.getElement(CardElement)\n      })\n\n      //if wine add wine method (how to get wine)\n      if(!error){\n        const {id} = paymentMethod\n        if(!ifPairMeal) { //document this\n          const signatureMealPayment = await Payment.signatureStripePayment(id)\n          meal()//our POST method for purchases when purchasing signature-meal passed down by a prop\n          setSuccess(true)\n          return signatureMealPayment\n        } else {\n          const pairMealPayment = await Payment.signatureStripePayment(id)\n          pair()\n          setSuccess(true)\n          return pairMealPayment\n        }\n\n      } else {\n        console.log(error.message)\n      }\n  }\n\n  return (\n    <div>\n      {!success ?\n      <form onSubmit={handleSubmit}>\n        <fieldset className=\"FormGroup col-12 spectrum-background\">\n          <div className=\"FormRow\">\n            <CardElement options={CARD_OPTIONS}/>\n          </div>\n          </fieldset>\n          <div className=\"text-center mt-3\">\n            <button className=\"Stripe-Payment-Button btn btn-default\" style={{color: \"white\"}}>Place your order</button>\n          </div>\n      </form>\n      : \n      <div>\n        <h3>Successfully purchased your meal!</h3>\n      </div>\n      }\n    </div>\n  )\n}\n\nexport default CheckoutForm\n"]},"metadata":{},"sourceType":"module"}