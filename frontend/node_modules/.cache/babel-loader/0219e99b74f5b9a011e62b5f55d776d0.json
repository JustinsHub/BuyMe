{"ast":null,"code":"var _jsxFileName = \"/Users/anyone/Desktop/Coding/SB Bootcamp/Capstone-Project-2/Pickout/frontend/src/components/products/SignatureMeal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Products from './foodApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignatureMeal = ({\n  user\n}) => {\n  _s();\n\n  const [randomMeal, setRandomMeal] = useState(null);\n  const [loginError, setLoginError] = useState([]);\n\n  const ourRandomMeal = async () => {\n    const res = await Products.getRandomProduct();\n    const {\n      image\n    } = res.data.recipes[0];\n    setRandomMeal(image);\n  }; //setLogin error when redirected if not logged in...\n  //useState change if theres added to cart\n  //We can request the API HERE and users can either continue with purchase or wait till next time. (Have a second random pick?)\n\n\n  if (!user) {\n    setLoginError('You need to login in order to continue.');\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global-mt\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: loginError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: ourRandomMeal,\n      children: \"Random\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: randomMeal,\n      alt: \"Signature Meal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignatureMeal, \"GSZMR+szwXGP+ElvxUefVAkzpN0=\");\n\n_c = SignatureMeal;\nexport default SignatureMeal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignatureMeal\");","map":{"version":3,"sources":["/Users/anyone/Desktop/Coding/SB Bootcamp/Capstone-Project-2/Pickout/frontend/src/components/products/SignatureMeal.js"],"names":["React","useState","Redirect","Products","SignatureMeal","user","randomMeal","setRandomMeal","loginError","setLoginError","ourRandomMeal","res","getRandomProduct","image","data","recipes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAC9B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMS,aAAa,GAAG,YAAW;AAC7B,UAAMC,GAAG,GAAG,MAAMR,QAAQ,CAACS,gBAAT,EAAlB;AACA,UAAM;AAACC,MAAAA;AAAD,QAAUF,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAhB;AACAR,IAAAA,aAAa,CAACM,KAAD,CAAb;AACH,GAJD,CAJ8B,CAU9B;AACA;AACA;;;AAEA,MAAG,CAACR,IAAJ,EAAU;AACNI,IAAAA,aAAa,CAAC,yCAAD,CAAb;AACA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAA,gBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,YADJ,eAEA;AAAQ,MAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAK,MAAA,GAAG,EAAEJ,UAAV;AAAsB,MAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA1BD;;GAAMF,a;;KAAAA,a;AA4BN,eAAeA,aAAf","sourcesContent":["import React, {useState} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport Products from './foodApi'\n\nconst SignatureMeal = ({user}) => {\n    const [randomMeal, setRandomMeal] = useState(null)\n    const [loginError, setLoginError] = useState([])\n\n    const ourRandomMeal = async() => {\n        const res = await Products.getRandomProduct()\n        const {image} = res.data.recipes[0]\n        setRandomMeal(image)\n    }\n\n    //setLogin error when redirected if not logged in...\n    //useState change if theres added to cart\n    //We can request the API HERE and users can either continue with purchase or wait till next time. (Have a second random pick?)\n\n    if(!user) {\n        setLoginError('You need to login in order to continue.')\n        return <Redirect to='/login'/>\n    }\n    \n    return (\n        <div className=\"global-mt\">\n            <h1>{loginError}</h1>\n        <button onClick={ourRandomMeal}>Random</button>\n        <img src={randomMeal} alt=\"Signature Meal\"/>\n        </div>\n    )\n}\n\nexport default SignatureMeal"]},"metadata":{},"sourceType":"module"}