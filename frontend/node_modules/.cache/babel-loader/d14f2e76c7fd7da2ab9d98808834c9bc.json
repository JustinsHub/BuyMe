{"ast":null,"code":"import axios from 'axios';\nimport { API_KEY } from '../../config';\nimport { ourRandomTags, ourRandomWines, randNum } from '../commons/shuffleArray';\nconst BASE_URL_SPOONTACULAR = \"https://api.spoonacular.com\"; //base url api from my backend\n\nconst BASE_URL_LOCAL = 'http://localhost:5001';\n\nclass Products {\n  //our API for signature-meal\n  static async getSignatureMeal() {\n    const res = await axios.get(`${BASE_URL_LOCAL}/meals/signature-meal`);\n    return res;\n  } //get API for wine information\n\n\n  static async getPairMeal() {\n    const res = await axios.get(`${BASE_URL_LOCAL}/meals/pair-meal`);\n    return res;\n  } //generates a random cuisine tag based on array in imported function\n\n\n  static async getRandomMeal() {\n    const res = await axios.get(`${BASE_URL_SPOONTACULAR}/recipes/random?&tags=${ourRandomTags}&apiKey=${API_KEY}`);\n    return res;\n  } //random wine make sure to put type to match the random meal if there type on random meal api find it\n  //generates a random number for API parameter\n\n\n  static async getRandomWine() {\n    const res = await axios.get(`${BASE_URL_SPOONTACULAR}/food/wine/recommendation?wine=${ourRandomWines}&number=${randNum}&apiKey=${API_KEY}`);\n    return res;\n  }\n\n  static async signatureMealPurchase(userId, mealId) {\n    const res = await axios.post(`${BASE_URL_LOCAL}/signature/${mealId}/purchase/${userId}`);\n    return res;\n  }\n\n  static async pairMealPurchase(userId, mealId, pairId) {\n    const res = await axios.post(`${BASE_URL_LOCAL}/pair-meal/${mealId}/${pairId}/purchase/${userId}`);\n    return res;\n  }\n\n}\n\nexport default Products;","map":{"version":3,"sources":["/Users/anyone/Desktop/Coding/SB Bootcamp/Capstone-Project-2/Pickout/frontend/src/components/products/foodApi.js"],"names":["axios","API_KEY","ourRandomTags","ourRandomWines","randNum","BASE_URL_SPOONTACULAR","BASE_URL_LOCAL","Products","getSignatureMeal","res","get","getPairMeal","getRandomMeal","getRandomWine","signatureMealPurchase","userId","mealId","post","pairMealPurchase","pairId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,cAAtB;AACA,SAAQC,aAAR,EAAuBC,cAAvB,EAAuCC,OAAvC,QAAqD,yBAArD;AAEA,MAAMC,qBAAqB,GAAG,6BAA9B,C,CAEA;;AACA,MAAMC,cAAc,GAAE,uBAAtB;;AAEA,MAAMC,QAAN,CAAe;AACX;AAC6B,eAAhBC,gBAAgB,GAAG;AAC5B,UAAMC,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAEJ,cAAe,uBAA5B,CAAlB;AACA,WAAOG,GAAP;AACH,GALU,CAOX;;;AACwB,eAAXE,WAAW,GAAE;AACtB,UAAMF,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAEJ,cAAe,kBAA5B,CAAlB;AACA,WAAOG,GAAP;AACH,GAXU,CAYX;;;AAC0B,eAAbG,aAAa,GAAG;AACzB,UAAMH,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAEL,qBAAsB,yBAAwBH,aAAc,WAAUD,OAAQ,EAA3F,CAAlB;AACA,WAAOQ,GAAP;AACH,GAhBU,CAkBX;AACA;;;AAC0B,eAAbI,aAAa,GAAG;AACzB,UAAMJ,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,GAAEL,qBAAsB,kCAAiCF,cAAe,WAAUC,OAAQ,WAAUH,OAAQ,EAAvH,CAAlB;AACA,WAAOQ,GAAP;AACH;;AAEiC,eAArBK,qBAAqB,CAACC,MAAD,EAASC,MAAT,EAAiB;AAC/C,UAAMP,GAAG,GAAG,MAAMT,KAAK,CAACiB,IAAN,CAAY,GAAEX,cAAe,cAAaU,MAAO,aAAYD,MAAO,EAApE,CAAlB;AACA,WAAON,GAAP;AACH;;AAE4B,eAAhBS,gBAAgB,CAACH,MAAD,EAASC,MAAT,EAAiBG,MAAjB,EAAyB;AAClD,UAAMV,GAAG,GAAG,MAAMT,KAAK,CAACiB,IAAN,CAAY,GAAEX,cAAe,cAAaU,MAAO,IAAGG,MAAO,aAAYJ,MAAO,EAA9E,CAAlB;AACA,WAAON,GAAP;AACH;;AAjCU;;AAqCf,eAAeF,QAAf","sourcesContent":["import axios from 'axios'\nimport {API_KEY} from '../../config'\nimport {ourRandomTags, ourRandomWines, randNum} from '../commons/shuffleArray'\n\nconst BASE_URL_SPOONTACULAR = \"https://api.spoonacular.com\" \n\n//base url api from my backend\nconst BASE_URL_LOCAL= 'http://localhost:5001'\n\nclass Products {\n    //our API for signature-meal\n    static async getSignatureMeal() {\n        const res = await axios.get(`${BASE_URL_LOCAL}/meals/signature-meal`)\n        return res\n    }\n\n    //get API for wine information\n    static async getPairMeal(){\n        const res = await axios.get(`${BASE_URL_LOCAL}/meals/pair-meal`)\n        return res\n    }\n    //generates a random cuisine tag based on array in imported function\n    static async getRandomMeal() {\n        const res = await axios.get(`${BASE_URL_SPOONTACULAR}/recipes/random?&tags=${ourRandomTags}&apiKey=${API_KEY}`)\n        return res\n    }\n\n    //random wine make sure to put type to match the random meal if there type on random meal api find it\n    //generates a random number for API parameter\n    static async getRandomWine() {\n        const res = await axios.get(`${BASE_URL_SPOONTACULAR}/food/wine/recommendation?wine=${ourRandomWines}&number=${randNum}&apiKey=${API_KEY}`)\n        return res\n    }\n\n    static async signatureMealPurchase(userId, mealId) {\n        const res = await axios.post(`${BASE_URL_LOCAL}/signature/${mealId}/purchase/${userId}`)\n        return res\n    }\n    \n    static async pairMealPurchase(userId, mealId ,pairId) {\n        const res = await axios.post(`${BASE_URL_LOCAL}/pair-meal/${mealId}/${pairId}/purchase/${userId}`)\n        return res\n    }\n    \n}\n\nexport default Products\n"]},"metadata":{},"sourceType":"module"}