{"ast":null,"code":"var _jsxFileName = \"/Users/anyone/Desktop/Coding/SB Bootcamp/Capstone-Project-2/Pickout/frontend/src/components/products/SignatureMeal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Products from './foodApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignatureMeal = ({\n  user\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [randomMeal, setRandomMeal] = useState(null); //do wine pair and signature meal pair\n  //look for payment api\n  //move on to requesting our api when purchased\n  //make user only be able to pick one random meal a day\n  //css\n\n  const getRandomMeal = async () => {\n    const res = await Products.getRandomMeal();\n    const {\n      image\n    } = res.data.recipes[0];\n    setRandomMeal(image);\n    console.log(res.data);\n  }; //setLogin error when redirected if not logged in...\n  //useState change if theres added to cart\n  //We can request the API HERE and users can either continue with purchase or wait till next time. (Have a second random pick?)\n\n\n  if (!user) {\n    history.push(\"/error/must-login-or-signup\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global-mt\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getRandomMeal,\n      children: \"Get Random Meal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: randomMeal,\n      alt: \"Signature Meal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignatureMeal, \"IKGFpGomNdRajYMM7o1wmsCuu5k=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignatureMeal;\nexport default SignatureMeal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignatureMeal\");","map":{"version":3,"sources":["/Users/anyone/Desktop/Coding/SB Bootcamp/Capstone-Project-2/Pickout/frontend/src/components/products/SignatureMeal.js"],"names":["React","useState","useHistory","Products","SignatureMeal","user","history","randomMeal","setRandomMeal","getRandomMeal","res","image","data","recipes","console","log","push"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAC9B,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA5C,CAF8B,CAI9B;AACA;AACA;AACA;AACA;;AAEA,QAAMQ,aAAa,GAAG,YAAW;AAC7B,UAAMC,GAAG,GAAG,MAAMP,QAAQ,CAACM,aAAT,EAAlB;AACA,UAAM;AAACE,MAAAA;AAAD,QAAUD,GAAG,CAACE,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAhB;AACAL,IAAAA,aAAa,CAACG,KAAD,CAAb;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACE,IAAhB;AACH,GALD,CAV8B,CAiB9B;AACA;AACA;;;AAEA,MAAG,CAACP,IAAJ,EAAU;AACNC,IAAAA,OAAO,CAACU,IAAR,CAAa,6BAAb;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACA;AAAQ,MAAA,OAAO,EAAEP,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAK,MAAA,GAAG,EAAEF,UAAV;AAAsB,MAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CA/BD;;GAAMH,a;UACcF,U;;;KADdE,a;AAiCN,eAAeA,aAAf","sourcesContent":["import React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport Products from './foodApi'\n\nconst SignatureMeal = ({user}) => {\n    const history = useHistory()\n    const [randomMeal, setRandomMeal] = useState(null)\n\n    //do wine pair and signature meal pair\n    //look for payment api\n    //move on to requesting our api when purchased\n    //make user only be able to pick one random meal a day\n    //css\n\n    const getRandomMeal = async() => {\n        const res = await Products.getRandomMeal()\n        const {image} = res.data.recipes[0]\n        setRandomMeal(image)\n        console.log(res.data)\n    }\n\n    //setLogin error when redirected if not logged in...\n    //useState change if theres added to cart\n    //We can request the API HERE and users can either continue with purchase or wait till next time. (Have a second random pick?)\n    \n    if(!user) {\n        history.push(\"/error/must-login-or-signup\")\n    }\n\n    return (\n        <div className=\"global-mt\">\n        <button onClick={getRandomMeal}>Get Random Meal</button>\n        <img src={randomMeal} alt=\"Signature Meal\"/>\n        </div>\n    )\n}\n\nexport default SignatureMeal"]},"metadata":{},"sourceType":"module"}