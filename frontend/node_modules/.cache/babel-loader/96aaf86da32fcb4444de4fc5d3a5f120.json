{"ast":null,"code":"var _jsxFileName = \"/Users/anyone/Desktop/Coding/SB Bootcamp/Capstone-Project-2/frontend/src/components/AppContextWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport AppContext from './AppContext';\nimport User from './api';\nimport useLocalStorage from './custom-hooks/useLocalStorage';\nimport jwt from 'jsonwebtoken';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppContextWrapper = ({\n  children\n}) => {\n  _s();\n\n  const localStorageKey = \"token\";\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(localStorageKey); //TODO: apply token on useEffect. Check to see if the user is logged in (currentUser)\n  //Apply private routes if(!currentUser)\n  //Update profile route for user info and edit/delete feature(API Requests)\n  //Look for API on what to build on the website.\n\n  useEffect(() => {\n    const getCurrentUser = async () => {\n      if (token) {\n        const {\n          id\n        } = jwt.decode(token);\n        const loggedInUser = User.getUserId(id);\n        setCurrentUser(loggedInUser);\n      }\n    };\n  });\n\n  const register = async userInfo => {\n    const res = await User.register(userInfo);\n\n    if (res.data) {\n      setToken(res.data.token); //store token on localStorage when registered\n    }\n\n    return res;\n  };\n\n  const login = async loginInfo => {\n    const res = await User.login(loginInfo);\n\n    if (res.data) {\n      setToken(res.data.token); //store token on localStorage when logged in\n    }\n\n    return res;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n      value: {\n        currentUser,\n        register,\n        login,\n        token\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppContextWrapper, \"k7T/y4T6x5yez9DlJpNNr1gGl6s=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = AppContextWrapper;\nexport default AppContextWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppContextWrapper\");","map":{"version":3,"sources":["/Users/anyone/Desktop/Coding/SB Bootcamp/Capstone-Project-2/frontend/src/components/AppContextWrapper.js"],"names":["React","useState","useEffect","AppContext","User","useLocalStorage","jwt","AppContextWrapper","children","localStorageKey","currentUser","setCurrentUser","token","setToken","getCurrentUser","id","decode","loggedInUser","getUserId","register","userInfo","res","data","login","loginInfo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,OAAjB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AACtC,QAAMC,eAAe,GAAG,OAAxB;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBR,eAAe,CAACI,eAAD,CAAzC,CAJsC,CAMtC;AACA;AACA;AACA;;AAEAP,EAAAA,SAAS,CAAC,MAAK;AACX,UAAMY,cAAc,GAAG,YAAU;AACjC,UAAGF,KAAH,EAAS;AACL,cAAM;AAACG,UAAAA;AAAD,YAAOT,GAAG,CAACU,MAAJ,CAAWJ,KAAX,CAAb;AACA,cAAMK,YAAY,GAAGb,IAAI,CAACc,SAAL,CAAeH,EAAf,CAArB;AACAJ,QAAAA,cAAc,CAACM,YAAD,CAAd;AACH;AACJ,KANG;AAMF,GAPO,CAAT;;AASA,QAAME,QAAQ,GAAG,MAAMC,QAAN,IAAmB;AAChC,UAAMC,GAAG,GAAG,MAAMjB,IAAI,CAACe,QAAL,CAAcC,QAAd,CAAlB;;AACA,QAAGC,GAAG,CAACC,IAAP,EAAY;AACRT,MAAAA,QAAQ,CAACQ,GAAG,CAACC,IAAJ,CAASV,KAAV,CAAR,CADQ,CACiB;AAC5B;;AACD,WAAOS,GAAP;AACH,GAND;;AAQA,QAAME,KAAK,GAAG,MAAMC,SAAN,IAAoB;AAC9B,UAAMH,GAAG,GAAG,MAAMjB,IAAI,CAACmB,KAAL,CAAWC,SAAX,CAAlB;;AACA,QAAGH,GAAG,CAACC,IAAP,EAAY;AACRT,MAAAA,QAAQ,CAACQ,GAAG,CAACC,IAAJ,CAASV,KAAV,CAAR,CADQ,CACiB;AAC5B;;AACD,WAAOS,GAAP;AACH,GAND;;AAQA,sBACI;AAAA,2BACI,QAAC,UAAD,CAAY,QAAZ;AAAqB,MAAA,KAAK,EAAE;AAACX,QAAAA,WAAD;AAAcS,QAAAA,QAAd;AAAwBI,QAAAA,KAAxB;AAA+BX,QAAAA;AAA/B,OAA5B;AAAA,gBACCJ;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA3CD;;GAAMD,iB;UAIwBF,e;;;KAJxBE,iB;AA6CN,eAAeA,iBAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport AppContext from './AppContext'\nimport User from './api'\nimport useLocalStorage from './custom-hooks/useLocalStorage'\nimport jwt from 'jsonwebtoken'\n\nconst AppContextWrapper = ({children}) => {\n    const localStorageKey = \"token\"\n\n    const [currentUser, setCurrentUser] = useState(null)\n    const [token, setToken] = useLocalStorage(localStorageKey) \n\n    //TODO: apply token on useEffect. Check to see if the user is logged in (currentUser)\n    //Apply private routes if(!currentUser)\n    //Update profile route for user info and edit/delete feature(API Requests)\n    //Look for API on what to build on the website.\n\n    useEffect(()=> {\n        const getCurrentUser = async()=> {\n        if(token){\n            const {id} = jwt.decode(token)\n            const loggedInUser = User.getUserId(id)\n            setCurrentUser(loggedInUser)\n        }\n    }})\n\n    const register = async(userInfo) => {\n        const res = await User.register(userInfo)\n        if(res.data){\n            setToken(res.data.token) //store token on localStorage when registered\n        }\n        return res\n    }\n\n    const login = async(loginInfo) => {\n        const res = await User.login(loginInfo)\n        if(res.data){   \n            setToken(res.data.token) //store token on localStorage when logged in\n        }\n        return res \n    }\n    \n    return (\n        <div>\n            <AppContext.Provider value={{currentUser, register, login, token}}>\n            {children}\n            </AppContext.Provider>\n        </div>\n    )\n}\n\nexport default AppContextWrapper"]},"metadata":{},"sourceType":"module"}