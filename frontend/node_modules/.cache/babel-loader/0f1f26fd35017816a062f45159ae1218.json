{"ast":null,"code":"var _jsxFileName = \"/Users/anyone/Desktop/Coding/SB Bootcamp/Capstone-Project-2/Pickout/frontend/src/components/products/SignatureMeal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport parse from 'html-react-parser';\nimport { useHistory } from 'react-router-dom';\nimport Products from './foodApi';\nimport '../styles/SignatureMeal.css'; //get a single random meal by requesting from API and render image and description\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignatureMeal = ({\n  user\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [randomMeal, setRandomMeal] = useState(null);\n  const [mealTitle, setMealTitle] = useState(null);\n  const [mealSummary, setMealSummary] = useState(\"\"); //look for payment api\n  //move on to requesting our api when purchased\n  //make user only be able to pick one random meal a day\n  //css\n  //have a countdown timer when clicked\n\n  const getRandomMeal = async () => {\n    const res = await Products.getRandomMeal();\n    const {\n      image,\n      title,\n      summary\n    } = res.data.recipes[0];\n    setMealTitle(title);\n    setRandomMeal(image);\n    setMealSummary(summary);\n    console.log(res.data);\n  }; //setLogin error when redirected if not logged in...\n  //useState change if theres added to cart\n  //We can request the API HERE and users can either continue with purchase or wait till next time. (Have a second random pick?)\n  // if(!user) {\n  //     history.push(\"/error/must-login-or-signup\")\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Signature-Meal-m\",\n    children: randomMeal ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Signature-Meal-c card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"Signature-Meal-f card-title\",\n          children: mealTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-6\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"Signature-Meal-i\",\n                src: randomMeal,\n                alt: \"Signature Meal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: parse(mealSummary)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Signature-Meal-f\",\n        children: \"Instructions:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Signature-Meal-b btn btn-default\",\n        style: {\n          color: \"white\"\n        },\n        onClick: getRandomMeal,\n        children: \"Get Random Meal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignatureMeal, \"yfJShVcl+g+vVcJiL4bPij3FRdU=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignatureMeal;\nexport default SignatureMeal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignatureMeal\");","map":{"version":3,"sources":["/Users/anyone/Desktop/Coding/SB Bootcamp/Capstone-Project-2/Pickout/frontend/src/components/products/SignatureMeal.js"],"names":["React","useState","parse","useHistory","Products","SignatureMeal","user","history","randomMeal","setRandomMeal","mealTitle","setMealTitle","mealSummary","setMealSummary","getRandomMeal","res","image","title","summary","data","recipes","console","log","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,6BAAP,C,CAEA;;;;AACA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAC9B,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C,CAJ8B,CAM9B;AACA;AACA;AACA;AACA;;AACA,QAAMa,aAAa,GAAG,YAAW;AAC7B,UAAMC,GAAG,GAAG,MAAMX,QAAQ,CAACU,aAAT,EAAlB;AACA,UAAM;AAACE,MAAAA,KAAD;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA0BH,GAAG,CAACI,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAhC;AACAT,IAAAA,YAAY,CAACM,KAAD,CAAZ;AACAR,IAAAA,aAAa,CAACO,KAAD,CAAb;AACAH,IAAAA,cAAc,CAACK,OAAD,CAAd;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACI,IAAhB;AACH,GAPD,CAX8B,CAoB9B;AACA;AACA;AAEA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,cAEKX,UAAU,gBACP;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,6BAAd;AAAA,oBAA6CE;AAA7C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACA;AAAK,YAAA,SAAS,EAAC,KAAf;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBADJ,eAGI;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,qCACA;AAAK,gBAAA,SAAS,EAAC,kBAAf;AAAkC,gBAAA,GAAG,EAAEF,UAAvC;AAAmD,gBAAA,GAAG,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAMI;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAUA;AAAA,sBAAIN,KAAK,CAACU,WAAD;AAAT;AAAA;AAAA;AAAA;AAAA,kBAVA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADO,gBAmBX;AAAA,8BACI;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AAAqD,QAAA,KAAK,EAAE;AAACW,UAAAA,KAAK,EAAE;AAAR,SAA5D;AAA8E,QAAA,OAAO,EAAET,aAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CA3DD;;GAAMT,a;UACcF,U;;;KADdE,a;AA6DN,eAAeA,aAAf","sourcesContent":["import React, {useState} from 'react'\nimport parse from 'html-react-parser'\nimport {useHistory} from 'react-router-dom'\nimport Products from './foodApi'\nimport '../styles/SignatureMeal.css'\n\n//get a single random meal by requesting from API and render image and description\nconst SignatureMeal = ({user}) => {\n    const history = useHistory()\n    const [randomMeal, setRandomMeal] = useState(null)\n    const [mealTitle, setMealTitle] = useState(null)\n    const [mealSummary, setMealSummary] = useState(\"\")\n\n    //look for payment api\n    //move on to requesting our api when purchased\n    //make user only be able to pick one random meal a day\n    //css\n    //have a countdown timer when clicked\n    const getRandomMeal = async() => {\n        const res = await Products.getRandomMeal()\n        const {image, title, summary} = res.data.recipes[0]\n        setMealTitle(title)\n        setRandomMeal(image)\n        setMealSummary(summary)\n        console.log(res.data)\n    }\n\n    //setLogin error when redirected if not logged in...\n    //useState change if theres added to cart\n    //We can request the API HERE and users can either continue with purchase or wait till next time. (Have a second random pick?)\n    \n    // if(!user) {\n    //     history.push(\"/error/must-login-or-signup\")\n    // }\n\n    return (\n        <div className=\"Signature-Meal-m\">\n            {/* if the request has been filled then render the API(food) */}\n            {randomMeal ? \n                <div className=\"Signature-Meal-c card\">\n                    <div className=\"card-body\">\n                        <h1 className=\"Signature-Meal-f card-title\">{mealTitle}</h1>\n                        <div className=\"container\">   \n                        <div className=\"row\">\n                            <div className=\"col-md-3\">\n                            </div>\n                            <div className=\"col-md-6\">\n                            <img className=\"Signature-Meal-i\" src={randomMeal} alt=\"Signature Meal\"/>\n                            </div>\n                            <div className=\"col-md-3\">\n                            </div>\n                        </div>\n                        <p>{parse(mealSummary)}</p>\n                        </div>\n                    </div>\n                </div>\n                :\n            <div>\n                <p className=\"Signature-Meal-f\">\n                    Instructions: \n                </p>\n                <button className=\"Signature-Meal-b btn btn-default\" style={{color: \"white\"}} onClick={getRandomMeal}>Get Random Meal</button>\n            </div>\n        }\n        </div>\n    )\n}\n\nexport default SignatureMeal"]},"metadata":{},"sourceType":"module"}