{"ast":null,"code":"var _jsxFileName = \"/Users/anyone/Desktop/Coding/SB Bootcamp/Capstone-Project-2/Pickout/frontend/src/components/products/paymentComponents/CheckoutForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\nimport Payment from './paymentApi';\nimport '../../styles/StripePayments.css'; //CSS prop add on for CardElement\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CARD_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"16px\",\n      \"::placeholder\": {\n        color: \"#aaaaaa\"\n      }\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\"\n    }\n  }\n};\n\nconst CheckoutForm = ({\n  meal,\n  pair\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [ifPairMeal] = useState(localStorage.getItem('pair-meal'));\n  const [success, setSuccess] = useState(false);\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const redirectSuccess = () => {\n    return history.push('/successful-payment');\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      const {\n        id\n      } = paymentMethod; //checks if there is wine added to cart (localStorage)\n\n      if (!ifPairMeal) {\n        const signatureMealPayment = await Payment.signatureStripePayment(id);\n        meal(); //our POST method for purchases when purchasing signature-meal passed down by a prop\n\n        setSuccess(true);\n        return signatureMealPayment;\n      } else {\n        const pairMealPayment = await Payment.pairStripePayment(id);\n        pair();\n        setSuccess(true);\n        return pairMealPayment;\n      }\n    } else {\n      console.log(error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !success ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        className: \"FormGroup col-12 spectrum-background\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"FormRow\",\n          children: /*#__PURE__*/_jsxDEV(CardElement, {\n            options: CARD_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"Stripe-Payment-Button btn btn-default\",\n          style: {\n            color: \"white\"\n          },\n          children: \"Place your order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: redirectSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"SRIYMkSGeirlqfgqNeeos9VzUb8=\", false, function () {\n  return [useHistory, useStripe, useElements];\n});\n\n_c = CheckoutForm;\nexport default CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/Users/anyone/Desktop/Coding/SB Bootcamp/Capstone-Project-2/Pickout/frontend/src/components/products/paymentComponents/CheckoutForm.js"],"names":["React","useState","useHistory","CardElement","useElements","useStripe","Payment","CARD_OPTIONS","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CheckoutForm","meal","pair","history","ifPairMeal","localStorage","getItem","success","setSuccess","stripe","elements","redirectSuccess","push","handleSubmit","e","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","id","signatureMealPayment","signatureStripePayment","pairMealPayment","pairStripePayment","console","log","message"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { useHistory } from 'react-router';\nimport {CardElement, useElements, useStripe} from '@stripe/react-stripe-js';\nimport Payment from './paymentApi'\nimport '../../styles/StripePayments.css'\n\n//CSS prop add on for CardElement\nconst CARD_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"16px\",\n      \"::placeholder\": {\n        color: \"#aaaaaa\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nconst CheckoutForm = ({meal, pair}) => {\n  const history = useHistory()\n\n  const [ifPairMeal] = useState(localStorage.getItem('pair-meal'))\n  const [success, setSuccess] = useState(false)\n\n  const stripe = useStripe();\n  const elements = useElements();\n  \n  const redirectSuccess = () => {\n    return history.push('/successful-payment')\n  }\n\n  const handleSubmit = async (e) => {\n      e.preventDefault();\n      const {error, paymentMethod} = await stripe.createPaymentMethod({\n        type: \"card\",\n        card: elements.getElement(CardElement)\n      })\n\n\n      if(!error){\n        const {id} = paymentMethod\n\n        //checks if there is wine added to cart (localStorage)\n        if(!ifPairMeal) { \n          const signatureMealPayment = await Payment.signatureStripePayment(id)\n          meal()//our POST method for purchases when purchasing signature-meal passed down by a prop\n          setSuccess(true)\n          return signatureMealPayment\n        } else {\n          const pairMealPayment = await Payment.pairStripePayment(id)\n          pair()\n          setSuccess(true)\n          return pairMealPayment\n        }\n      } else {\n        console.log(error.message)\n      }\n  }\n\n  return (\n    <div>\n      {!success ?\n      <form onSubmit={handleSubmit}>\n        <fieldset className=\"FormGroup col-12 spectrum-background\">\n          <div className=\"FormRow\">\n            <CardElement options={CARD_OPTIONS}/>\n          </div>\n          </fieldset>\n          <div className=\"text-center mt-3\">\n            <button className=\"Stripe-Payment-Button btn btn-default\" style={{color: \"white\"}}>Place your order</button>\n          </div>\n      </form>\n      : \n      <div>\n        {redirectSuccess}\n      </div>\n      }\n    </div>\n  )\n}\n\nexport default CheckoutForm\n"]},"metadata":{},"sourceType":"module"}