{"ast":null,"code":"var _jsxFileName = \"/Users/anyone/Desktop/Coding/SB Bootcamp/Capstone-Project-2/Pickout/frontend/src/components/products/SignatureMeal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Products from './foodApi';\nimport '../styles/SignatureMeal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignatureMeal = ({\n  user\n}) => {\n  _s();\n\n  const history = useHistory();\n  const [randomMeal, setRandomMeal] = useState(null);\n  const [mealTitle, setMealTitle] = useState(null);\n  const [mealSummary, setMealSummary] = useState(null); //look for payment api\n  //move on to requesting our api when purchased\n  //make user only be able to pick one random meal a day\n  //css\n\n  const getRandomMeal = async () => {\n    const res = await Products.getRandomMeal();\n    const {\n      image,\n      title\n    } = res.data.recipes[0];\n    setRandomMeal(image);\n    setMealTitle(title);\n    console.log(res.data);\n  }; //setLogin error when redirected if not logged in...\n  //useState change if theres added to cart\n  //We can request the API HERE and users can either continue with purchase or wait till next time. (Have a second random pick?)\n  // if(!user) {\n  //     history.push(\"/error/must-login-or-signup\")\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global-mt\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: mealTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-4\",\n          children: !randomMeal ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Our Signature Meal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"Signature-Meal-i\",\n            src: randomMeal,\n            alt: \"Signature Meal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-md-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-default mt-5\",\n      style: {\n        color: \"white\"\n      },\n      onClick: getRandomMeal,\n      children: \"Get Random Meal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignatureMeal, \"3W09DA/oCIBl5UTgmVfbXfVLqRs=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignatureMeal;\nexport default SignatureMeal;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignatureMeal\");","map":{"version":3,"sources":["/Users/anyone/Desktop/Coding/SB Bootcamp/Capstone-Project-2/Pickout/frontend/src/components/products/SignatureMeal.js"],"names":["React","useState","useHistory","Products","SignatureMeal","user","history","randomMeal","setRandomMeal","mealTitle","setMealTitle","mealSummary","setMealSummary","getRandomMeal","res","image","title","data","recipes","console","log","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,6BAAP;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAC9B,QAAMC,OAAO,GAAGJ,UAAU,EAA1B;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,IAAD,CAA9C,CAJ8B,CAM9B;AACA;AACA;AACA;;AAEA,QAAMY,aAAa,GAAG,YAAW;AAC7B,UAAMC,GAAG,GAAG,MAAMX,QAAQ,CAACU,aAAT,EAAlB;AACA,UAAM;AAACE,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAiBF,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiB,CAAjB,CAAvB;AACAV,IAAAA,aAAa,CAACO,KAAD,CAAb;AACAL,IAAAA,YAAY,CAACM,KAAD,CAAZ;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACG,IAAhB;AACH,GAND,CAX8B,CAmB9B;AACA;AACA;AAEA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,8BACI;AAAA,kBAAKR;AAAL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEA;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA,gCACI;AAAK,UAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAK,UAAA,KAAK,EAAC,UAAX;AAAA,oBAEC,CAACF,UAAD,gBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAd,gBAA0C;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAkC,YAAA,GAAG,EAAEA,UAAvC;AAAmD,YAAA,GAAG,EAAC;AAAvD;AAAA;AAAA;AAAA;AAAA;AAF3C;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAOI;AAAK,UAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI;AAAQ,MAAA,SAAS,EAAC,sBAAlB;AAAyC,MAAA,KAAK,EAAE;AAACc,QAAAA,KAAK,EAAE;AAAR,OAAhD;AAAkE,MAAA,OAAO,EAAER,aAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA9CD;;GAAMT,a;UACcF,U;;;KADdE,a;AAgDN,eAAeA,aAAf","sourcesContent":["import React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport Products from './foodApi'\nimport '../styles/SignatureMeal.css'\n\nconst SignatureMeal = ({user}) => {\n    const history = useHistory()\n    const [randomMeal, setRandomMeal] = useState(null)\n    const [mealTitle, setMealTitle] = useState(null)\n    const [mealSummary, setMealSummary] = useState(null)\n\n    //look for payment api\n    //move on to requesting our api when purchased\n    //make user only be able to pick one random meal a day\n    //css\n\n    const getRandomMeal = async() => {\n        const res = await Products.getRandomMeal()\n        const {image, title} = res.data.recipes[0]\n        setRandomMeal(image)\n        setMealTitle(title)\n        console.log(res.data)\n    }\n\n    //setLogin error when redirected if not logged in...\n    //useState change if theres added to cart\n    //We can request the API HERE and users can either continue with purchase or wait till next time. (Have a second random pick?)\n    \n    // if(!user) {\n    //     history.push(\"/error/must-login-or-signup\")\n    // }\n\n    return (\n        <div className=\"global-mt\">\n            <div class=\"container\">\n                <h1>{mealTitle}</h1>\n            <div class=\"row\">\n                <div class=\"col-md-4\">\n                </div>\n                <div class=\"col-md-4\">\n                    {/* change this to some rules or something on how it works */}\n                {!randomMeal ? <p>Our Signature Meal</p> : <img className=\"Signature-Meal-i\" src={randomMeal} alt=\"Signature Meal\"/>}\n                </div>\n                <div class=\"col-md-4\">\n                </div>\n            </div>\n            </div>\n            <button className=\"btn btn-default mt-5\" style={{color: \"white\"}} onClick={getRandomMeal}>Get Random Meal</button>\n        </div>\n        \n    )\n}\n\nexport default SignatureMeal"]},"metadata":{},"sourceType":"module"}